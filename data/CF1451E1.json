{"code":200,"currentTemplate":"ProblemShow","currentData":{"problem":{"background":"","description":"The only difference between the easy and hard versions is the constraints on the number of queries.\n\nThis is an interactive problem.\n\nRidbit has a hidden array $ a $ of $ n $ integers which he wants Ashish to guess. Note that $ n $ is a power of two. Ashish is allowed to ask three different types of queries. They are of the form\n\n- AND $ i $ $ j $ : ask for the [bitwise AND](https:\/\/en.wikipedia.org\/wiki\/Bitwise_operation#AND) of elements $ a_i $ and $ a_j $ $ (1 \\leq i, j \\le n $ , $ i \\neq j) $\n- OR $ i $ $ j $ : ask for the [bitwise OR](https:\/\/en.wikipedia.org\/wiki\/Bitwise_operation#OR) of elements $ a_i $ and $ a_j $ $ (1 \\leq i, j \\le n $ , $ i \\neq j) $\n- XOR $ i $ $ j $ : ask for the [bitwise XOR](https:\/\/en.wikipedia.org\/wiki\/Bitwise_operation#XOR) of elements $ a_i $ and $ a_j $ $ (1 \\leq i, j \\le n $ , $ i \\neq j) $\n\nCan you help Ashish guess the elements of the array?\n\nIn this version, each element takes a value in the range $ [0, n-1] $ (inclusive) and Ashish can ask no more than $ n+2 $ queries.","inputFormat":"The first line of input contains one integer $ n $ $ (4 \\le n \\le 2^{16}) $ \u2014 the length of the array. It is guaranteed that $ n $ is a power of two.","outputFormat":"To ask a query print a single line containing one of the following (without quotes)\n\n- \"AND i j\"\n- \"OR i j\"\n- \"XOR i j\"\n\n where $ i $ and $ j $ $ (1 \\leq i, j \\le n $ , $ i \\neq j) $ denote the indices being queried.For each query, you will receive an integer $ x $ whose value depends on the type of query. If the indices queried are invalid or you exceed the number of queries however, you will get $ x = -1 $ . In this case, you should terminate the program immediately.\n\nWhen you have guessed the elements of the array, print a single line \"! \" (without quotes), followed by $ n $ space-separated integers \u2014 the elements of the array.\n\nGuessing the array does not count towards the number of queries asked.\n\nThe interactor is not adaptive. The array $ a $ does not change with queries.\n\nAfter printing a query do not forget to output the end of the line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use:\n\n- fflush(stdout) or cout.flush() in C++;\n- System.out.flush() in Java;\n- flush(output) in Pascal;\n- stdout.flush() in Python;\n- see the documentation for other languages.\n\nHacks\n\nTo hack the solution, use the following test format:\n\nOn the first line print a single integer $ n $ $ (4 \\le n \\le 2^{16}) $ \u2014 the length of the array. It must be a power of 2. The next line should contain $ n $ space-separated integers in the range $ [0, n-1] $ \u2014 the array $ a $ .","samples":[["4\n\n0\n\n2\n\n3","OR 1 2\n\nOR 2 3\n\nXOR 2 4\n\n! 0 0 2 3"]],"hint":"The array $ a $ in the example is $ [0, 0, 2, 3] $ .","provider":{"uid":3,"name":"\u6d1b\u8c37","avatar":"https:\/\/cdn.luogu.com.cn\/upload\/usericon\/3.png","slogan":"","badge":null,"isAdmin":true,"isBanned":false,"color":"Purple","ccfLevel":0,"background":""},"attachments":[],"canEdit":false,"limits":{"time":[4000],"memory":[256000]},"stdCode":"","vjudge":{"origin":"CodeForces","link":"http:\/\/codeforces.com\/problemset\/problem\/1451\/E1","id":"1451E1"},"translation":"**\u8fd9\u662f\u4e00\u9053\u4ea4\u4e92\u9898\u3002**  \n\n\u4e00\u4e2a\u542b\u6709 $n (4 \\le n \\le 2^{16})$ \u4e2a\u6570\u7684\u6570\u7ec4\uff0c$n$ \u662f $2$ \u7684\u6574\u6570\u6b21\u5e42\uff0c\u4e14\u6bcf\u4e2a\u5143\u7d20\u7684\u8303\u56f4\u5747\u5728 $[0,n-1]$ \u4e4b\u95f4\u3002\n\n\u8bfb\u5165\u6570\u5b57\u7684\u4e2a\u6570 $n$ \u540e\uff0c\u6bcf\u6b21\u53ef\u4ee5\u8be2\u95ee\u4ee5\u4e0b\u4e09\u79cd\u95ee\u9898\uff1a\n\n- `AND i j`\u3000\u8be2\u95ee $a_i,a_j$ \u4e24\u4e2a\u6570\u505a\u4f4d\u4e0e\u8fd0\u7b97\u7684\u7ed3\u679c\u3002\n\n- `OR i j`\u3000\u8be2\u95ee $a_i,a_j$ \u4e24\u4e2a\u6570\u505a\u4f4d\u6216\u8fd0\u7b97\u7684\u7ed3\u679c\u3002\n\n- `XOR i j`\u3000\u8be2\u95ee $a_i,a_j$ \u4e24\u4e2a\u6570\u505a\u5f02\u6216\u8fd0\u7b97\u540e\u7684\u7ed3\u679c\u3002\n\n\u4f60\u9700\u8981\u4f7f\u7528\u4e0d\u8d85\u8fc7 $n+2$ \u6b21\u8be2\u95ee\u5f97\u51fa\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u503c\u3002\n\n\u5f97\u51fa\u7b54\u6848\u540e\uff0c\u9996\u5148\u8f93\u51fa\u4e00\u4e2a `! `\uff08\u540e\u9762\u8ddf\u6709\u7a7a\u683c\uff09\uff0c\u7136\u540e\u6309\u7167 $a_1$ \u5230 $a_n$ \u7684\u987a\u5e8f\u4f9d\u6b21\u8f93\u51fa\u6bcf\u4e2a\u5143\u7d20\u7684\u503c\u3002","tags":[],"wantsTranslation":false,"totalSubmit":495,"totalAccepted":322,"flag":5,"pid":"CF1451E1","title":"Bitwise Queries (Easy Version)","difficulty":4,"fullScore":100,"type":"CF"},"contest":null,"discussions":[{"id":679771,"title":"\u8bf7\u6c42\u4fee\u6539\u7ffb\u8bd1","forum":{"id":54939,"name":"CF1451E1 Bitwise Queries (Easy Version)","slug":"CF1451E1"}},{"id":677172,"title":"\u7ffb\u8bd1\u4ec0\u4e48\u4e1c\u897f","forum":{"id":54939,"name":"CF1451E1 Bitwise Queries (Easy Version)","slug":"CF1451E1"}},{"id":553399,"title":"\u8bf7\u6c42\u4fee\u6539\u7ffb\u8bd1","forum":{"id":54939,"name":"CF1451E1 Bitwise Queries (Easy Version)","slug":"CF1451E1"}}],"bookmarked":false,"vjudgeUsername":null,"recommendations":[],"lastLanguage":0,"lastCode":"","privilegedTeams":[],"userTranslation":null},"currentTitle":"Bitwise Queries (Easy Version)","currentTheme":null,"currentTime":1727768450}